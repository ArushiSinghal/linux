#!/bin/bash

# Mostly borrowed from tools/testing/selftests/vm/run_vmtests

# Please run this as root
# Try allocating 2GB of 16MB huge pages, below is the size in kB.
# Please change this needed memory if the test program changes
needmem=2097152
mnt=./huge
exitcode=0

# Get huge pagesize and freepages from /proc/meminfo
while read name size unit; do
	if [ "$name" = "HugePages_Free:" ]; then
		freepgs=$size
	fi
	if [ "$name" = "Hugepagesize:" ]; then
		pgsize=$size
	fi
done < /proc/meminfo

# Set required nr_hugepages
if [ -n "$freepgs" ] && [ -n "$pgsize" ]; then
	nr_hugepgs=`cat /proc/sys/vm/nr_hugepages`
	needpgs=`expr $needmem / $pgsize`
	tries=2
	while [ $tries -gt 0 ] && [ $freepgs -lt $needpgs ]; do
		lackpgs=$(( $needpgs - $freepgs ))
		echo 3 > /proc/sys/vm/drop_caches
		echo $(( $lackpgs + $nr_hugepgs )) > /proc/sys/vm/nr_hugepages
		if [ $? -ne 0 ]; then
			echo "Please run this test as root"
		fi
		while read name size unit; do
			if [ "$name" = "HugePages_Free:" ]; then
				freepgs=$size
			fi
		done < /proc/meminfo
		tries=$((tries - 1))
	done
	if [ $freepgs -lt $needpgs ]; then
		printf "Not enough huge pages available (%d < %d)\n" \
		       $freepgs $needpgs
	fi
else
	echo "No hugetlbfs support in kernel ? check dmesg"
fi

mkdir $mnt
mount -t hugetlbfs none $mnt

# Run the test programs
echo "...................."
echo "Test HugeTLB vs THP"
echo "...................."
./hugetlb_vs_thp_test
if [ $? -ne 0 ]; then
	echo "[FAIL]"
	exitcode=1
else
	echo "[PASS]"
fi

echo "........................."
echo "Test subpage protection"
echo "........................."
./subpage_prot
if [ $? -ne 0 ]; then
	echo "[FAIL]"
	exitcode=1
else
	echo "[PASS]"
fi

echo "..........................."
echo "Test normal page migration"
echo "..........................."
./page-migration
if [ $? -ne 0 ]; then
	echo "[FAIL]"
	exitcode=1
else
	echo "[PASS]"
fi

# Enable this after huge page migration is supported on POWER

#echo "........................."
#echo "Test huge page migration"
#echo "........................."
#./hugepage-migration
#if [ $? -ne 0 ]; then
#	echo "[FAIL]"
#	exitcode=1
#else
#	echo "[PASS]"
#fi

# Huge pages cleanup
umount $mnt
rm -rf $mnt
echo $nr_hugepgs > /proc/sys/vm/nr_hugepages

exit $exitcode
