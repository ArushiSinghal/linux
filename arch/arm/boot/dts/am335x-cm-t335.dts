/*
 * am335x-cm-t335.dts - Device Tree file for Compulab CM-T335
 *
 * Copyright (C) 2014 - 2015 CompuLab Ltd. - http://www.compulab.co.il/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

/dts-v1/;

#include "am33xx.dtsi"

/ {
	model = "CompuLab CM-T335";
	compatible = "compulab,cm-t335", "ti,am33xx";

	memory {
		device_type = "memory";
		reg = <0x80000000 0x8000000>;	/* 128 MB */
	};

	leds {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <&gpio_led_pins>;
		led@0 {
			label = "cm_t335:green";
			gpios = <&gpio2 0 GPIO_ACTIVE_LOW>;	/* gpio2_0 */
			linux,default-trigger = "heartbeat";
		};
	};

	/* regulator for mmc */
	vmmc_fixed: fixedregulator@0 {
		compatible = "regulator-fixed";
		regulator-name = "vmmc_fixed";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
	};

	backlight {
		compatible = "pwm-backlight";
		pwms = <&ecap0 0 50000 0>;
		brightness-levels = <0 51 53 56 62 75 101 152 255>;
		default-brightness-level = <8>;
	};
};

&am33xx_pinmux {
	pinctrl-names = "default";
	pinctrl-0 = <>;

	i2c0_pins: pinmux_i2c0_pins {
		pinctrl-single,pins = <
			/* i2c0_sda.i2c0_sda */
			0x188 (PIN_INPUT_PULLUP | MUX_MODE0)
			/* i2c0_scl.i2c0_scl */
			0x18c (PIN_INPUT_PULLUP | MUX_MODE0)
		>;
	};

	i2c1_pins: pinmux_i2c1_pins {
		pinctrl-single,pins = <
			/* uart0_ctsn.i2c1_sda */
			0x168 (PIN_INPUT_PULLUP | MUX_MODE2)
			/* uart0_rtsn.i2c1_scl */
			0x16c (PIN_INPUT_PULLUP | MUX_MODE2)
		>;
	};

	gpio_led_pins: pinmux_gpio_led_pins {
		pinctrl-single,pins = <
			0x88 (PIN_OUTPUT | MUX_MODE7)	/* gpmc_csn3.gpio2_0 */
		>;
	};

	nandflash_pins: pinmux_nandflash_pins {
		pinctrl-single,pins = <
			/* gpmc_ad0.gpmc_ad0 */
			0x0 (PIN_INPUT_PULLUP | MUX_MODE0)
			/* gpmc_ad1.gpmc_ad1 */
			0x4 (PIN_INPUT_PULLUP | MUX_MODE0)
			/* gpmc_ad2.gpmc_ad2 */
			0x8 (PIN_INPUT_PULLUP | MUX_MODE0)
			/* gpmc_ad3.gpmc_ad3 */
			0xc (PIN_INPUT_PULLUP | MUX_MODE0)
			/* gpmc_ad4.gpmc_ad4 */
			0x10 (PIN_INPUT_PULLUP | MUX_MODE0)
			/* gpmc_ad5.gpmc_ad5 */
			0x14 (PIN_INPUT_PULLUP | MUX_MODE0)
			/* gpmc_ad6.gpmc_ad6 */
			0x18 (PIN_INPUT_PULLUP | MUX_MODE0)
			/* gpmc_ad7.gpmc_ad7 */
			0x1c (PIN_INPUT_PULLUP | MUX_MODE0)
			/* gpmc_wait0.gpmc_wait0 */
			0x70 (PIN_INPUT_PULLUP | MUX_MODE0)
			/* gpmc_wpn.gpio0_30 */
			0x74 (PIN_INPUT_PULLUP | MUX_MODE7)
			/* gpmc_csn0.gpmc_csn0  */
			0x7c (PIN_OUTPUT | MUX_MODE0)
			/* gpmc_advn_ale.gpmc_advn_ale */
			0x90 (PIN_OUTPUT | MUX_MODE0)
			/* gpmc_oen_ren.gpmc_oen_ren */
			0x94 (PIN_OUTPUT | MUX_MODE0)
			/* gpmc_wen.gpmc_wen */
			0x98 (PIN_OUTPUT | MUX_MODE0)
			/* gpmc_be0n_cle.gpmc_be0n_cle */
			0x9c (PIN_OUTPUT | MUX_MODE0)
		>;
	};

	uart0_pins: pinmux_uart0_pins {
		pinctrl-single,pins = <
			/* uart0_rxd.uart0_rxd */
			0x170 (PIN_INPUT_PULLUP | MUX_MODE0)
			/* uart0_txd.uart0_txd */
			0x174 (PIN_OUTPUT_PULLDOWN | MUX_MODE0)
		>;
	};

	ecap0_pins: pinmux_ecap0_pins {
		pinctrl-single,pins = <
			/* eCAP0_in_PWM0_out.eCAP0_in_PWM0_out MODE0 */
			0x164 0x0
		>;
	};

	cpsw_default: cpsw_default {
		pinctrl-single,pins = <
			/* Slave 1 */
			/* mii1_txen.rgmii1_tctl */
			0x114 (PIN_OUTPUT_PULLDOWN | MUX_MODE2)
			/* mii1_rxdv.rgmii1_rctl */
			0x118 (PIN_INPUT_PULLDOWN | MUX_MODE2)
			/* mii1_txd3.rgmii1_td3 */
			0x11c (PIN_OUTPUT_PULLDOWN | MUX_MODE2)
			/* mii1_txd2.rgmii1_td2 */
			0x120 (PIN_OUTPUT_PULLDOWN | MUX_MODE2)
			/* mii1_txd1.rgmii1_td1 */
			0x124 (PIN_OUTPUT_PULLDOWN | MUX_MODE2)
			/* mii1_txd0.rgmii1_td0 */
			0x128 (PIN_OUTPUT_PULLDOWN | MUX_MODE2)
			/* mii1_txclk.rgmii1_tclk */
			0x12c (PIN_OUTPUT_PULLDOWN | MUX_MODE2)
			/* mii1_rxclk.rgmii1_rclk */
			0x130 (PIN_INPUT_PULLDOWN | MUX_MODE2)
			/* mii1_rxd3.rgmii1_rd3 */
			0x134 (PIN_INPUT_PULLDOWN | MUX_MODE2)
			/* mii1_rxd2.rgmii1_rd2 */
			0x138 (PIN_INPUT_PULLDOWN | MUX_MODE2)
			/* mii1_rxd1.rgmii1_rd1 */
			0x13c (PIN_INPUT_PULLDOWN | MUX_MODE2)
			/* mii1_rxd0.rgmii1_rd0 */
			0x140 (PIN_INPUT_PULLDOWN | MUX_MODE2)
		>;
	};

	cpsw_sleep: cpsw_sleep {
		pinctrl-single,pins = <
			/* Slave 1 reset value */
			0x114 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x118 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x11c (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x120 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x124 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x128 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x12c (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x130 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x134 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x138 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x13c (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x140 (PIN_INPUT_PULLDOWN | MUX_MODE7)
		>;
	};

	davinci_mdio_default: davinci_mdio_default {
		pinctrl-single,pins = <
			/* mdio_data.mdio_data */
			0x148 (PIN_INPUT_PULLUP | SLEWCTRL_FAST | MUX_MODE0)
			/* mdio_clk.mdio_clk */
			0x14c (PIN_OUTPUT_PULLUP | MUX_MODE0)
		>;
	};

	davinci_mdio_sleep: davinci_mdio_sleep {
		pinctrl-single,pins = <
			/* MDIO reset value */
			0x148 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x14c (PIN_INPUT_PULLDOWN | MUX_MODE7)
		>;
	};

	mmc1_pins: pinmux_mmc1_pins {
		pinctrl-single,pins = <
			/* mmc0_dat3.mmc0_dat3 */
			0xf0 (PIN_INPUT_PULLUP | MUX_MODE0)
			/* mmc0_dat2.mmc0_dat2 */
			0xf4 (PIN_INPUT_PULLUP | MUX_MODE0)
			/* mmc0_dat1.mmc0_dat1 */
			0xf8 (PIN_INPUT_PULLUP | MUX_MODE0)
			/* mmc0_dat0.mmc0_dat0 */
			0xfc (PIN_INPUT_PULLUP | MUX_MODE0)
			/* mmc0_clk.mmc0_clk */
			0x100 (PIN_INPUT_PULLUP | MUX_MODE0)
			/* mmc0_cmd.mmc0_cmd */
			0x104 (PIN_INPUT_PULLUP | MUX_MODE0)
		>;
	};
};

&uart0 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart0_pins>;

	status = "okay";
};

&i2c0 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c0_pins>;

	status = "okay";
	clock-frequency = <400000>;

	eeprom: 24c02@50 {
		compatible = "atmel,24c02";
		reg = <0x50>;
		pagesize = <16>;
	};

	ext_rtc: em3027@56 {
		compatible = "emmicro,em3027";
		reg = <0x56>;
	};
};

&epwmss0 {
	status = "okay";

	ecap0: ecap@48300100 {
		status = "okay";
		pinctrl-names = "default";
		pinctrl-0 = <&ecap0_pins>;
	};
};

&gpmc {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&nandflash_pins>;
	ranges = <0 0 0x08000000 0x10000000>;	/* CS0: NAND */
	nand@0,0 {
		reg = <0 0 0>; /* CS0, offset 0 */
		ti,nand-ecc-opt = "bch8";
		ti,elm-id = <&elm>;
		nand-bus-width = <8>;
		gpmc,device-width = <1>;
		gpmc,sync-clk-ps = <0>;
		gpmc,cs-on-ns = <0>;
		gpmc,cs-rd-off-ns = <44>;
		gpmc,cs-wr-off-ns = <44>;
		gpmc,adv-on-ns = <6>;
		gpmc,adv-rd-off-ns = <34>;
		gpmc,adv-wr-off-ns = <44>;
		gpmc,we-on-ns = <0>;
		gpmc,we-off-ns = <40>;
		gpmc,oe-on-ns = <0>;
		gpmc,oe-off-ns = <54>;
		gpmc,access-ns = <64>;
		gpmc,rd-cycle-ns = <82>;
		gpmc,wr-cycle-ns = <82>;
		gpmc,wait-on-read = "true";
		gpmc,wait-on-write = "true";
		gpmc,bus-turnaround-ns = <0>;
		gpmc,cycle2cycle-delay-ns = <0>;
		gpmc,clk-activation-ns = <0>;
		gpmc,wait-monitoring-ns = <0>;
		gpmc,wr-access-ns = <40>;
		gpmc,wr-data-mux-bus-ns = <0>;
		/* MTD partition table */
		#address-cells = <1>;
		#size-cells = <1>;
		partition@0 {
			label = "spl";
			reg = <0x00000000 0x00200000>;
		};
		partition@1 {
			label = "uboot";
			reg = <0x00200000 0x00100000>;
		};
		partition@2 {
			label = "uboot environment";
			reg = <0x00300000 0x00100000>;
		};
		partition@3 {
			label = "dtb";
			reg = <0x00400000 0x00100000>;
		};
		partition@4 {
			label = "splash";
			reg = <0x00500000 0x00400000>;
		};
		partition@5 {
			label = "linux";
			reg = <0x00900000 0x00600000>;
		};
		partition@6 {
			label = "rootfs";
			reg = <0x00F00000 0>;
		};
	};
};

&elm {
	status = "okay";
};

&mac {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&cpsw_default>;
	pinctrl-1 = <&cpsw_sleep>;
	slaves = <1>;
	status = "okay";
};

&davinci_mdio {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&davinci_mdio_default>;
	pinctrl-1 = <&davinci_mdio_sleep>;
	status = "okay";
};

&cpsw_emac0 {
	phy_id = <&davinci_mdio>, <0>;
	phy-mode = "rgmii-txid";
};

&mmc1 {
	status = "okay";
	vmmc-supply = <&vmmc_fixed>;
	bus-width = <4>;
	pinctrl-names = "default";
	pinctrl-0 = <&mmc1_pins>;
};

