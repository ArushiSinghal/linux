Texas Instruments clkctrl clock binding

Texas Instruments SoCs can have a clkctrl clock controller for each
interconnect target module. The clkctrl clock controller manages functional
and interface clocks for each module. Each clkctrl controller can also
gate one or more optional functional clocks for a module. The clkctrl
clock controller is typical for omap3 and later variants.

The clock consumers can specify the index of the clkctrl clock using
the hardware offset from the clkctrl instance register space. The optional
functional clocks can be specified by clkctrl hardware offset plus the
index of the optional clock. Please see the Linux clock framework binding
at Documentation/devicetree/bindings/clock/clock-bindings.txt.

Required properties :
- compatible : shall be "ti,clkctrl"
- #clock-cells : shall contain 1

Optional properties :
- "ti,modulemode-auto" : list of clkctrl offsets using automatic gating

Example: Clock controller node:

&cm_l4per {
	cm_l4per_clkctrl: clk@20 {
		compatible = "ti,clkctrl";
		reg = <0x20 0x1b0>;
		#clock-cells = 1;
		ti,modulemode-auto = <OMAP4_GPIO2_CLKCTRL>;
	};
};

Example: Preprocessor helper macros in dt-bindings/ti-clkctrl.h

#define OMAP4_CLKCTRL_OFFSET		0x20

#define OMAP_CLKCTRL_INDEX(offset)		\
	(((offset) - OMAP4_CLKCTRL_OFFSET) << 8)

#define OMAP_CLKCTRL_OPT_INDEX(offset, optclk)	\
	(OMAP_CLKCTRL_INDEX(offset) + (optclk))

#define OMAP4_GPTIMER10_CLKTRL		OMAP_CLKCTRL_INDEX(0x28)
#define OMAP4_GPTIMER11_CLKTRL		OMAP_CLKCTRL_INDEX(0x30)
#define OMAP4_GPTIMER2_CLKTRL		OMAP_CLKCTRL_INDEX(0x38)
...
#define OMAP4_GPIO2_CLKCTRL		OMAP_CLKCTRL_INDEX(0x60)
#define OMAP4_GPIO2_CLKCTRL_DBCLK	OMAP_CLKCTRL_OPT_INDEX(0x60, 1)
...

Example: Clock consumer node for GPIO2:

&gpio2 {
       clocks = <&cm_l4per_clkctrl OMAP4_GPIO2_CLKCTRL
		 &cm_l4per_clkctrl OMAP4_GPIO2_CLKCTRL_DBCLK>;
};
