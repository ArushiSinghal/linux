Qualcomm Technologies HIDMA Management interface

The Qualcomm Technologies HIDMA device has been designed
to support virtualization technology. The driver has been
divided into two to follow the hardware design. The management
driver is executed in hypervisor context and is the main
management entity for all channels provided by the device.

Each HIDMA HW consists of multiple channels. These channels
share some set of common parameters. These parameters are
initialized by the management driver during power up.
Same management driver is used for monitoring the execution
of the channels. Management driver can change the performance
behavior dynamically such as bandwidth allocation and
prioritization.

All channel devices get probed in the hypervisor
context during power up. They show up as DMA engine
DMA channels. Then, before starting the virtualization; each
channel device is unbound from the hypervisor by VFIO
and assign to the guest machine for control.

This management driver will  be used by the system
admin to monitor/reset the execution state of the DMA
channels. This will be the management interface.


Required properties:
- compatible: "qcom,hidma-mgmt-1.0";
- reg: Address range for DMA device
- dma-channels: Number of channels supported by this DMA controller.
- max-write-burst-bytes: Maximum write burst in bytes. A memcpy requested is
  fragmented to multiples of this amount.
- max-read-burst-bytes: Maximum read burst in bytes. A memcpy request is
  fragmented to multiples of this amount.
- max-write-transactions: Maximum write transactions to perform in a burst
- max-read-transactions: Maximum read transactions to perform in a burst
- channel-reset-timeout-cycles: Channel reset timeout in cycles for this SOC.
- channel-priority: Priority of the channel.
  Each dma channel share the same HW bandwidth with other dma channels.
  If two requests reach to the HW at the same time from a low priority and
  high priority channel, high priority channel will claim the bus.
  0=low priority, 1=high priority
- channel-weight: Round robin weight of the channel
  Since there are only two priority levels supported, scheduling among
  the equal priority channels is done via weights.

Example:

	hidma-mgmt@f9984000 = {
		compatible = "qcom,hidma-mgmt-1.0";
		reg = <0xf9984000 0x15000>;
		dma-channels = 6;
		max-write-burst-bytes = 1024;
		max-read-burst-bytes = 1024;
		max-write-transactions = 31;
		max-read-transactions = 31;
		channel-reset-timeout-cycles = 0x500;
		channel-priority = < 1 1 0 0 0 0>;
		channel-weight = < 1 13 10 3 4 5>;
	};
