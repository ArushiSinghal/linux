The device-mapper uevent code adds the capability to device-mapper to create
and send kobject uevents (uevents).  Previously device-mapper events were only
available through the ioctl interface.  The advantages of the uevents interface
are the event contains environment attributes providing increased context for
the event avoiding the need to query the state of the device-mapper device after
the event is received, and uevents are poll()-able in userspace, whereas the
ioctl event interface is not.

There are five functions DM targets should use.

struct dm_uevent *dm_uevent_build(struct mapped_device *md,
					 struct dm_target *ti,
					 enum kobject_action action,
					 const char *dm_action)

Construct a dm uevent with default DM variables attached(DM_TARGET,
DM_ACTION, DM_SEQNUM).

int add_uevent_var(struct kobj_uevent_env *env, const char *format, ...)

Optionally add event-specific data to the generated uevent. e.g. dm-mpath's
PATH_FAILED and PATH_REINSTATED uevents add path and number-of-remaining-paths
vars.

void dm_uevent_queue(struct mapped_device *md, struct list_head *elist)

Hand off the uevent to the device's list of pending events.

void dm_uevent_free(struct dm_uevent *event)

Something went wrong, free the uevent instead of queueing it.

void dm_table_event(struct dm_table *t)

Triggers sending of queued uevents as well as waking up processes waiting on
the ioctl.


The device-mapper uevent code also supplies three functions for device-mapper core
to call:

int dm_uevent_init(void)
void dm_uevent_exit(void)

Setup and teardown.

void dm_send_uevents(struct list_head *events, struct kobject *kobj)

Actually send the uevents (called indirectly from dm_table_event, above).


The variables added to the uevent environment are:

Variable Name: DM_TARGET
Uevent Action(s): KOBJ_CHANGE
Type: string
Description:
Value: Name of device-mapper target that generated the event.

Variable Name: DM_ACTION
Uevent Action(s): KOBJ_CHANGE
Type: string
Description:
Value: Device-mapper specific action that caused the uevent action.
	PATH_FAILED - A path has failed.
	PATH_REINSTATED - A path has been reinstated.

Variable Name: DM_SEQNUM
Uevent Action(s): KOBJ_CHANGE
Type: unsigned integer
Description: A sequence number for this specific device-mapper device.
Value: Valid unsigned integer range.

Variable Name: DM_PATH
Uevent Action(s): KOBJ_CHANGE
Type: string
Description: Major and minor number of the path device pertaining to this
event.
Value: Path name in the form of "Major:Minor"

Variable Name: DM_NR_VALID_PATHS
Uevent Action(s): KOBJ_CHANGE
Type: unsigned integer
Description:
Value: Valid unsigned integer range.

Variable Name: DM_NAME
Uevent Action(s): KOBJ_CHANGE
Type: string
Description: Name of the device-mapper device.
Value: Name

Variable Name: DM_UUID
Uevent Action(s): KOBJ_CHANGE
Type: string
Description: UUID of the device-mapper device.
Value: UUID. (Empty string if there isn't one.)

An example of the uevents generated as captured by udevmonitor is shown
below.

1.) Path failure.
UEVENT[1192521009.711215] change@/block/dm-3
ACTION=change
DEVPATH=/block/dm-3
SUBSYSTEM=block
DM_TARGET=multipath
DM_ACTION=PATH_FAILED
DM_SEQNUM=1
DM_PATH=8:32
DM_NR_VALID_PATHS=0
DM_NAME=mpath2
DM_UUID=mpath-35333333000002328
MINOR=3
MAJOR=253
SEQNUM=1130

2.) Path reinstate.
UEVENT[1192521132.989927] change@/block/dm-3
ACTION=change
DEVPATH=/block/dm-3
SUBSYSTEM=block
DM_TARGET=multipath
DM_ACTION=PATH_REINSTATED
DM_SEQNUM=2
DM_PATH=8:32
DM_NR_VALID_PATHS=1
DM_NAME=mpath2
DM_UUID=mpath-35333333000002328
MINOR=3
MAJOR=253
SEQNUM=1131
