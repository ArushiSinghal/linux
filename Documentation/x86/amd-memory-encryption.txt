Secure Memory Encryption (SME) is a feature found on AMD processors.

SME provides the ability to mark individual pages of memory as encrypted using
the standard x86 page tables.  A page that is marked encrpyted will be
automatically decrypted when read from DRAM and encrypted when written to
DRAM.  SME can therefore be used to protect the contents of DRAM from physical
attacks on the system.

Support for SME can be determined through the CPUID instruction. The CPUID
function 0x8000001f reports information related to SME:

	0x8000001f[eax]:
		Bit[0] indicates support for SME
	0x8000001f[ebx]:
		Bit[5:0]  pagetable bit number used to enable memory encryption
		Bit[11:6] reduction in physical address space, in bits, when
			  memory encryption is enabled (this only affects system
			  physical addresses, not guest physical addresses)

If support for SME is present, MSR 0xc00100010 (SYS_CFG) can be used to
determine if SME is enabled and/or to enable memory encryption:

	0xc0010010:
		Bit[23]   0 = memory encryption features are disabled
			  1 = memory encryption features are enabled

Linux relies on BIOS to set this bit if BIOS has determined that the reduction
in the physical address space as a result of enabling memory encryption (see
CPUID information above) will not conflict with the address space resource
requirements for the system.  If this bit is not set upon Linux startup then
Linux itself will not set it and memory encryption will not be possible.

SME support is configurable in the kernel through the AMD_MEM_ENCRYPT config
option. Additionally, the mem_encrypt=on command line parameter is required
to activate memory encryption.
